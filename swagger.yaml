openapi: 3.0.0
info:
  title: University Management API
  version: 1.0.0
  description: API for managing university data such as students, courses, faculty, and departments
servers:
  - url: http://localhost:5000/api

paths:
  /students:
    get:
      summary: Get all students
      tags:
        - Students
      responses:
        '200':
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
    post:
      summary: Create a new student
      tags:
        - Students
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Student created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

  /students/{studentId}:
    get:
      summary: Get a student by ID
      tags:
        - Students
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single student
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student not found
    put:
      summary: Update a student by ID
      tags:
        - Students
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Student updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
    delete:
      summary: Delete a student by ID
      tags:
        - Students
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Student deleted successfully

  /courses:
    get:
      summary: Get all courses
      tags:
        - Courses
      responses:
        '200':
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
    post:
      summary: Create a new course
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '201':
          description: Course created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'

  /courses/{courseId}:
    get:
      summary: Get a course by ID
      tags:
        - Courses
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single course
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
    put:
      summary: Update a course by ID
      tags:
        - Courses
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '200':
          description: Course updated successfully
    delete:
      summary: Delete a course by ID
      tags:
        - Courses
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Course deleted successfully

  /faculty:
    get:
      summary: Get all faculty members
      tags:
        - Faculty
      responses:
        '200':
          description: List of faculty members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Faculty'
    post:
      summary: Create a new faculty member
      tags:
        - Faculty
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Faculty'
      responses:
        '201':
          description: Faculty member created successfully

  /faculty/{facultyId}:
    get:
      summary: Get a faculty member by ID
      tags:
        - Faculty
      parameters:
        - name: facultyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single faculty member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
    put:
      summary: Update a faculty member by ID
      tags:
        - Faculty
      parameters:
        - name: facultyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Faculty'
      responses:
        '200':
          description: Faculty member updated successfully
    delete:
      summary: Delete a faculty member by ID
      tags:
        - Faculty
      parameters:
        - name: facultyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Faculty member deleted successfully

  /departments:
    get:
      summary: Get all departments
      tags:
        - Departments
      responses:
        '200':
          description: List of departments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Department'
    post:
      summary: Create a new department
      tags:
        - Departments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        '201':
          description: Department created successfully

  /departments/{departmentId}:
    get:
      summary: Get a department by ID
      tags:
        - Departments
      parameters:
        - name: departmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single department
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
    put:
      summary: Update a department by ID
      tags:
        - Departments
      parameters:
        - name: departmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        '200':
          description: Department updated successfully
    delete:
      summary: Delete a department by ID
      tags:
        - Departments
      parameters:
        - name: departmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Department deleted successfully

components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        enrollmentNumber:
          type: string
    Course:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        code:
          type: string
        department:
          type: string
    Faculty:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        department:
          type: string
    Department:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        code:
          type: string
