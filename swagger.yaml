openapi: 3.0.0
info:
  title: University Management API
  version: 1.0.0
  description: API for managing university data such as students, courses, faculty, and departments
servers:
  - url: https://university-management-system-api-nodejs.onrender.com/api

paths:
  /auth/login:
    post:
      summary: User login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully

  /auth/logout:
    get:
      summary: Logout the current user
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User logged out successfully

  /auth/profile:
    get:
      summary: Get user profile
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile of the authenticated user

  /students:
    get:
      summary: Get all students
      tags:
        - Students
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of students
    post:
      summary: Create a new student
      tags:
        - Students
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Student created successfully

  /students/{studentId}:
    get:
      summary: Get a student by ID
      tags:
        - Students
      security:
        - bearerAuth: []
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single student
    put:
      summary: Update a student by ID
      tags:
        - Students
      security:
        - bearerAuth: []
      parameters:
        - name: studentId
          in: path
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Student updated successfully
    delete:
      summary: Delete a student by ID
      tags:
        - Students
      security:
        - bearerAuth: []
      parameters:
        - name: studentId
          in: path
          required: true
      responses:
        '200':
          description: Student deleted successfully

  /courses:
    get:
      summary: Get all courses
      tags:
        - Courses
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of courses
    post:
      summary: Create a new course
      tags:
        - Courses
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '201':
          description: Course created successfully

  /courses/{courseId}:
    get:
      summary: Get a course by ID
      tags:
        - Courses
      security:
        - bearerAuth: []
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single course
    put:
      summary: Update a course by ID
      tags:
        - Courses
      security:
        - bearerAuth: []
      parameters:
        - name: courseId
          in: path
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '200':
          description: Course updated successfully
    delete:
      summary: Delete a course by ID
      tags:
        - Courses
      security:
        - bearerAuth: []
      parameters:
        - name: courseId
          in: path
          required: true
      responses:
        '200':
          description: Course deleted successfully

  /faculty:
    get:
      summary: Get all faculty members
      tags:
        - Faculty
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of faculty members
    post:
      summary: Create a new faculty member
      tags:
        - Faculty
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Faculty'
      responses:
        '201':
          description: Faculty member created successfully

  /faculty/{facultyId}:
    get:
      summary: Get a faculty member by ID
      tags:
        - Faculty
      security:
        - bearerAuth: []
      parameters:
        - name: facultyId
          in: path
          required: true
      responses:
        '200':
          description: A single faculty member
    put:
      summary: Update a faculty member by ID
      tags:
        - Faculty
      security:
        - bearerAuth: []
      parameters:
        - name: facultyId
          in: path
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Faculty'
      responses:
        '200':
          description: Faculty member updated successfully
    delete:
      summary: Delete a faculty member by ID
      tags:
        - Faculty
      security:
        - bearerAuth: []
      parameters:
        - name: facultyId
          in: path
          required: true
      responses:
        '200':
          description: Faculty member deleted successfully

  /departments:
    get:
      summary: Get all departments
      tags:
        - Departments
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of departments
    post:
      summary: Create a new department
      tags:
        - Departments
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        '201':
          description: Department created successfully

  /departments/{departmentId}:
    get:
      summary: Get a department by ID
      tags:
        - Departments
      security:
        - bearerAuth: []
      parameters:
        - name: departmentId
          in: path
          required: true
      responses:
        '200':
          description: A single department
    put:
      summary: Update a department by ID
      tags:
        - Departments
      security:
        - bearerAuth: []
      parameters:
        - name: departmentId
          in: path
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        '200':
          description: Department updated successfully
    delete:
      summary: Delete a department by ID
      tags:
        - Departments
      security:
        - bearerAuth: []
      parameters:
        - name: departmentId
          in: path
          required: true
      responses:
        '200':
          description: Department deleted successfully

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    Student:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        enrollmentNumber:
          type: string
    Course:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        code:
          type: string
        department:
          type: string
    Faculty:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        department:
          type: string
    Department:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        code:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
